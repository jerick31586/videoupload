@model VideoUpload.Web.Models.CreatePostViewModel

@{
    ViewBag.Title = "Upload";
}

<p class="pull-right">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info btn-xs", id="anchorBackToList" })
</p>
<h2>Upload a video</h2>

<form id = "frmUpload" method="post" enctype="multipart/form-data" action="@Url.Action("Upload", "Videos")">  
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(x=>x.Title)
        @Html.TextBoxFor(x => x.Title, new { @class = "form-control", required = "required" })
        @Html.ValidationMessageFor(x=>x.Title, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x=>x.Description)
        @Html.TextAreaFor(x => x.Description, new { @class = "form-control", required = "required" })
        @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x=>x.Owner)
        @Html.TextBoxFor(x=>x.Owner, new { @class = "form-control", required = "required" })
        @Html.ValidationMessageFor(x=>x.Owner, "" , new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.TextBoxFor(x=>x.Attachments, new { type="file", @class = "btn btn-primary btn-sm", required = "required" })
        @Html.ValidationMessageFor(x=>x.Attachments, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <button id="btnSubmit" type="submit" class="btn btn-sm">Upload</button>
    </div>
</form>


@Html.Partial("_Modal")

@section Script{
<script src="~/scripts/videos/upload.js"></script>
}