@model VideoUpload.Web.Models.Videos.VideoViewModel

@{
    var search = Context.Request.QueryString["s"];
    var prevDisabled = !Model.HasPreviousPage ? "hidden" : "";
    var nextDisabled = !Model.HasNextPage ? "hidden" : "";
    var actionRoute = ViewContext.RouteData.Values["action"].ToString();
}

@if (Model.TotalPages > 1)
{
    <ul class="pager">
        <li class="previous @prevDisabled">
            <a href="@Url.Action(actionRoute, new { s = search, page = Model.PageIndex - 1 })" role="button">
                <i class="fa fa-angle-left"></i>  &nbsp;&nbsp; Previous 
            </a>
        </li>
        <li class="next @nextDisabled">
            <a href="@Url.Action(actionRoute, new { s = search , page = Model.PageIndex + 1 })" role="button">
                Next &nbsp;&nbsp; <i class="fa fa-angle-right"></i>
            </a>
        </li>
    </ul>
}
